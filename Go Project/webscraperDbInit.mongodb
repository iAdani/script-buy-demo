// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'ScriptBuy';
const collection = 'WebScraper';

// The current database to use.
use(database);

// Create a new collection.
//db.createCollection(collection);

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
db.WebScraper.drop();

// Insert a document into the collection.
db.WebScraper.insertMany([
    {
    _name: '1pc',
    url: 'https://1pc.co.il',
    selectors: [
            {
                type: 'Item',
                main_selector : "#product-details-form",
                title_selector : "div.product-name > h1",
                price_selector : "div.product-price > span",
                image_selector : ["#cloudZoomImage","src"]
            },
            {
                type: 'Cat',
                main_selector : "div.item-grid > div.item-box",
                title_selector : "h2.product-title > a",
                price_selector : "span.actual-price",
                image_selector : ["div.picture > a > img","data-lazyloadsrc"]
            },
        ],
    },
    {
    _name: 'allincell',
    url: 'https://allincell.co.il',
    selectors: [
            {
                type: 'Item',
                main_selector : "div.row.top-image-content",
                title_selector : "h3.title",
                price_selector : "div.custom_price span.woocommerce-Price-amount.amount",
                image_selector : ["div.woocommerce-product-gallery__image > a","href"]
            },
            {
                type: 'Cat',
                main_selector : "div.product_div",
                title_selector : "h5 > a",
                price_selector : "span.woocommerce-Price-amount.amount",
                image_selector : ["img.img-responsive","src"]
            },
        ],
    },
    {
    _name: "bug",
    url: "https://bug.co.il",
    selectors: [
            {
                type: "Item",
                main_selector: "#product-page",
                title_selector: "#product-page-prodict-title",
                price_selector: "#product-price-container ins",
                image_selector: ["img.pm-gaee", "src"],
                img_selector_prefix : "https://www.bug.co.il"
            },
            {
                type: "Cat",
                main_selector: "div.span_4_of_12.col.float-right-col.product-cube.pc-gaee",
                title_selector: "h4 > a.tpurl",
                price_selector: "div.price > span",
                image_selector: ["a.image > img.img-lazy-load", "data-original"],
                img_selector_prefix : "https://www.bug.co.il"
            }
        ]
    },
    {
    _name: "ivory",
    url: "https://ivory.co.il",
    selectors: [
            {
                type: "Item",
                main_selector: "#productslider",
                title_selector: "#titleProd",
                price_selector: "span.print-actual-price",
                image_selector: ["#img_zoom_inout", "src"],
                img_selector_prefix : "https://www.ivory.co.il/"
            },
            {
                type: "Cat",
                main_selector: "div.row.p-1.entry-wrapper",
                title_selector: "div.col-md-12.col-12.title_product_catalog.mb-md-1.main-text-area",
                price_selector: "span.price-area > span.price",
                image_selector: ["div.image-d-wrapper > img.img-fluid", "data-src"],
                img_selector_prefix : "https://www.ivory.co.il/splendid_images/cache/"
            }
        ]
    },
    {
    _name: "officedepot",
    url: "https://officedepot.co.il",
    selectors: [
            {
                type: "Item",
                main_selector: "div.product",
                title_selector: "h2.product_title",
                price_selector: "p.price span.woocommerce-Price-amount.amount",
                image_selector: ["div.woocommerce-product-gallery__image > a", "href"]
            },
            {
                type: "Cat",
                main_selector: "div.product-inner",
                title_selector: "li.title a",
                price_selector: "span.right span.woocommerce-Price-amount.amount",
                image_selector: ["img.woo-entry-image-main", "src"]
            }
        ]
    },
    {
    _name: "terminalx",
    url: "https://terminalx.com",
    selectors: [
            {
                type: "Item",
                main_selector: "div.top_1-oZ.rtl_3OXU",
                title_selector: "h1.name_20R6",
                price_selector: "div.row_2tcG.bold_2wBM.prices-final_1R9x",
                image_selector: ["img.image_3k9y.image-element_22jc", "src"]
            },
            {
                type: "Cat",
                main_selector: "li.listing-product_3mjp",
                title_selector: "a.title_3ZxJ.tx-link_29YD.underline-hover_3GkV",
                price_selector: "div.row_2tcG.bold_2wBM.final-price_8CiX",
                image_selector: ["img.image_3k9y", "src"]
            }
        ]
    }
]);

// Insert a few documents into the sales collection.
// db.sales.insertMany([
//   { '_id': 1, 'item': 'abc', 'price': 10, 'quantity': 2, 'date': new Date('2014-03-01T08:00:00Z') },
//   { '_id': 2, 'item': 'jkl', 'price': 20, 'quantity': 1, 'date': new Date('2014-03-01T09:00:00Z') },
//   { '_id': 3, 'item': 'xyz', 'price': 5, 'quantity': 10, 'date': new Date('2014-03-15T09:00:00Z') },
//   { '_id': 4, 'item': 'xyz', 'price': 5, 'quantity':  20, 'date': new Date('2014-04-04T11:21:39.736Z') },
//   { '_id': 5, 'item': 'abc', 'price': 10, 'quantity': 10, 'date': new Date('2014-04-04T21:23:13.331Z') },
//   { '_id': 6, 'item': 'def', 'price': 7.5, 'quantity': 5, 'date': new Date('2015-06-04T05:08:13Z') },
//   { '_id': 7, 'item': 'def', 'price': 7.5, 'quantity': 10, 'date': new Date('2015-09-10T08:43:00Z') },
//   { '_id': 8, 'item': 'abc', 'price': 10, 'quantity': 5, 'date': new Date('2016-02-06T20:20:13Z') },
// ]);

// // Run a find command to view items sold on April 4th, 2014.
// db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// // Build an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];

// // Run the aggregation and open a cursor to the results.
// // Use toArray() to exhaust the cursor to return the whole result set.
// // You can use hasNext()/next() to iterate through the cursor page by page.
// db.sales.aggregate(aggregation);
